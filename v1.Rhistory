install.packages(c("tidyverse", "data.table", "lubridate", "ggplot2", "corrplot"))
library(tidyverse)
library(data.table)
library(lubridate)
library(ggplot2)
library(corrplot)
data <- fread("datasets/Combined_Flights_2022.csv")
str(data)
summary(data)
colSums(is.na(data))
data <- data %>%
filter(!is.na(DepTime) & !is.na(ArrTime) &
!is.na(DepDelayMinutes) & !is.na(ArrDelayMinutes) &
!is.na(DepDel15) & !is.na(TaxiOut) &
!is.na(WheelsOff) & !is.na(WheelsOn) &
!is.na(TaxiIn) & !is.na(ArrDel15) & !is.na(ArrDelay))
colSums(is.na(data))
data$FlightDate <- as.Date(data$FlightDate, format = "%Y-%m-%d")
data$DepTime <- as.numeric(data$DepTime)
data$ArrTime <- as.numeric(data$ArrTime)
data$Airline <- as.factor(data$Airline)
data$Origin <- as.factor(data$Origin)
data$Dest <- as.factor(data$Dest)
data$Cancelled <- as.factor(data$Cancelled)
data$Diverted <- as.factor(data$Diverted)
data$total_delay <- data$DepDelayMinutes + data$ArrDelayMinutes
data$day_of_week <- wday(data$FlightDate)
avg_delay_airline <- data %>%
group_by(Airline) %>%
summarise(avg_dep_delay = mean(DepDelayMinutes, na.rm = TRUE),
avg_arr_delay = mean(ArrDelayMinutes, na.rm = TRUE))
cancelled_flights <- data %>%
group_by(Airline) %>%
summarise(cancelled_count = sum(Cancelled == 1))
flights_per_day <- data %>%
group_by(day_of_week) %>%
summarise(flight_count = n())
delay_per_day <- data %>%
group_by(day_of_week) %>%
summarise(avg_total_delay = mean(total_delay, na.rm = TRUE))
ggplot(avg_delay_airline, aes(x = Airline, y = avg_dep_delay, fill = Airline)) +
geom_bar(stat = "identity") +
labs(title = "Average Departure Delay by Airline", x = "Airline", y = "Average Departure Delay (mins)") +
theme_minimal()
ggplot(cancelled_flights, aes(x = Airline, y = cancelled_count, fill = Airline)) +
geom_bar(stat = "identity") +
labs(title = "Number of Cancelled Flights by Airline", x = "Airline", y = "Cancelled Flights") +
theme_minimal()
ggplot(flights_per_day, aes(x = day_of_week, y = flight_count, group = 1)) +
geom_line(color = "blue", size = 1) +
geom_point() +
labs(title = "Flight Counts per Day of the Week", x = "Day of the Week", y = "Flight Count") +
theme_minimal()
ggplot(delay_per_day, aes(x = day_of_week, y = avg_total_delay, group = 1)) +
geom_line(color = "red", size = 1) +
geom_point() +
labs(title = "Average Delay per Day of the Week", x = "Day of the Week", y = "Average Delay (mins)") +
theme_minimal()
ggplot(data, aes(x = DepDelayMinutes)) +
geom_histogram(bins = 50, fill = "green", color = "black") +
labs(title = "Distribution of Departure Delay Minutes", x = "Departure Delay (mins)", y = "Count") +
theme_minimal()
ggplot(data, aes(x = Airline, y = total_delay, fill = Airline)) +
geom_boxplot() +
labs(title = "Total Delay Distribution by Airline", x = "Airline", y = "Total Delay (mins)") +
theme_minimal()
ggplot(data, aes(x = DepTime, y = ArrTime, color = Airline)) +
geom_point(alpha = 0.5) +
labs(title = "Departure Time vs Arrival Time by Airline", x = "Departure Time", y = "Arrival Time") +
theme_minimal()
heatmap_data <- data %>%
group_by(Origin, Dest) %>%
summarise(avg_total_delay = mean(total_delay, na.rm = TRUE))
heatmap_data <- data %>%
group_by(Origin, Dest) %>%
summarise(avg_total_delay = mean(total_delay, na.rm = TRUE))
ggplot(heatmap_data, aes(x = Origin, y = Dest, fill = avg_total_delay)) +
geom_tile() +
scale_fill_gradient(low = "white", high = "red") +
labs(title = "Average Total Delay by Origin and Destination", x = "Origin", y = "Destination") +
theme_minimal()
numeric_data <- data %>%
select(DepDelayMinutes, ArrDelayMinutes, AirTime, Distance)
cor_matrix <- cor(numeric_data, use = "complete.obs")
corrplot::corrplot(cor_matrix, method = "circle")
savehistory("C:/Users/ADMIN/Desktop/BDA_Mini_Project/v1.Rhistory")
